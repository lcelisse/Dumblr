"""empty message

Revision ID: bb47e73c68c6
Revises:
Create Date: 2023-02-27 19:09:35.986457

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")
# revision identifiers, used by Alembic.
revision = 'bb47e73c68c6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    op.create_table('follows',
                    sa.Column('following_id', sa.Integer(), nullable=False),
                    sa.Column('follower_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['following_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('following_id', 'follower_id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE follows SET SCHEMA {SCHEMA};")
    op.create_table('posts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('post_type', sa.String(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=475), nullable=True),
                    sa.Column('body', sa.String(length=475), nullable=True),
                    sa.Column('url', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE posts SET SCHEMA {SCHEMA};")
    op.create_table('comments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('post_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('comment', sa.String(
                        length=475), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE comments SET SCHEMA {SCHEMA};")
    op.create_table('likes',
                    sa.Column('users', sa.Integer(), nullable=False),
                    sa.Column('posts', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['posts'], ['posts.id'], ),
                    sa.ForeignKeyConstraint(['users'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('users', 'posts')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE likes SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('posts')
    op.drop_table('follows')
    op.drop_table('users')
    # ### end Alembic commands ###
